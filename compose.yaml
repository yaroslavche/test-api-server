services:
  api_server_php:
    container_name: api_server_php
    build:
      context: .
      dockerfile: ./docker/dev/php/Dockerfile
    restart: unless-stopped
    depends_on:
      - api_server_mysql
    volumes:
      - ./:/var/www/html
    env_file:
      - ./.env
    networks:
      - network

  api_server_nginx:
    container_name: api_server_nginx
    image: nginx:latest
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www/html
      - ./docker/dev/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api_server_php
    networks:
      - default
      - network

  api_server_mysql:
    container_name: api_server_mysql
    image: mysql:8.0
    ports:
      - "3306:3306"
    volumes:
      - ./docker/dev/db/data:/var/lib/mysql
    command: --default-authentication-plugin=caching_sha2_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-!ChangeMe!}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-api_server}
      MYSQL_USER: ${MYSQL_USER:-api_server}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-!ChangeMe!}
    networks:
      - network
    env_file:
      - ./.env

networks:
  network:
    name: network
    driver: bridge
